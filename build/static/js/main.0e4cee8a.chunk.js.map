{"version":3,"sources":["components/HeaderBar.jsx","components/FooterBar.jsx","components/Total.jsx","utils.js","loadData.js","components/BarChart.jsx","components/MapArea.jsx","containers/deliveries.js","components/HBarChart.jsx","containers/categories.js","components/BarChartsSupplier.jsx","components/Supplier.jsx","components/LocationsTable.jsx","containers/locations.js","App.jsx","reportWebVitals.js","index.js"],"names":["HeaderBar","className","style","backgroundColor","src","alt","FooterBar","id","href","target","rel","height","Total","props","summary","timestamp","moment","format","tot","toLocaleString","sumDoseX","y","acc","x","maxX","aggrBy","p","key","push","filterBy","z","replaceArea","filterByArea","area","areaMapping","code","ABR","BAS","CAL","CAM","EMR","FVG","LAZ","LIG","LOM","MAR","MOL","PAB","PAT","PIE","PUG","SAR","SIC","TOS","UMB","VDA","VEN","baseURL","obj","retobj","inverse","sommVaxSummaryURL","sommVaxDetailURL","vaxSummaryURL","vaxLocationsURL","anagraficaSummaryURL","lastUpdateURL","supplierDoses","elaborate","data","console","log","dataSommVaxSummary","filter","d","reduce","dataSupplier","dataSupplierDoses","dataSomeVaxDetail","dataSommVaxDetail","map","deliverySummary","dataVaxSummary","categoriesAndAges","dataProfileSummary","dataVaxSomLatest","totalDoses","prima_dose","_","sum","e","seconda_dose","vax_somministrati","data_consegna","substr","_e","numero_dosi","categories","name","total","groups","groupBy","allDosesSupplier","Object","keys","k","groupByKey","group","totale","fornitore","allDoses","totalSuplier","allDosesMapByArea","doesesByArea","groupByArea","dose","totalDosesByArea","dosi_somministrate","categoriesByRegionRAW","categoriesByRegions","forEach","ds","cat_oss","cat_pns","cat_rsa","over60","deliveredByArea","locations","dataVaxLocations","maxNumberOfLocations","locationsByRegion","items","length","value","totalDeliverySummary","details","head","categoria_operatori_sanitari_sociosanitari","sumBy","categoria_over80","categoria_ospiti_rsa","categoria_personale_non_sanitario","categoria_forze_armate","categoria_personale_scolastico","byAge","rows","age","r","sesso_maschile","sesso_femminile","percentage","dosi_consegnate","fascia_anagrafica","percentuale_somministrazione","toFixed","totalDeliverySummaryByAge","i","toString","trim","rowsData","gender","gen_m","gen_f","dataLastUpdate","ultimo_aggiornamento","loadData","a","Promise","all","fetch","resSommVaxSummary","resSommVaxDetail","resVaxSummary","resProfileSummaryURL","resVaxLocations","resLastUpdate","resSupplierDoses","json","BarChart","handleDeliveryBarChartClick","width","selected","property","title","ytitle","myRef","useRef","divRef","useEffect","d3","current","selectAll","remove","draw","responsivefy","svg","container","node","parentNode","parseInt","aspect","resize","targetWidth","attr","Math","round","call","window","on","maxScale","yprop","append","margin","xScale","padding","yScale","domain","range","xprop","text","chart","path","enter","bandwidth","exit","ref","MapArea","handleMapDeliveryClick","fillMapDeliveryArea","fillBy","tooltip","useState","geographies","setGeographies","maxValue","setMaxValue","maxBy","projection","center","rotate","parallels","scale","translate","res","topojson","objects","regions","features","fetchData","reg_name","properties","region","fill","field","stroke","strokeWidth","onClick","Deliveries","setDeliveryMapData","setDeliveryTableData","deliverySelectedRegion","setDeliverySelectedRegion","setTotalDelivery","totalAgeByGender","setTotalAgeByGender","deliveryBarChartData","setdeliveryBarChartData","selectedAge","setSelectedAge","isEmpty","resetFilter","xtitle","bar","find","HBarChart","handleRectClick","selectedCodeCategory","marginTop","Categories","categoryData","setCategoryData","setCategoryMapData","setSelectedCodeCategory","totalByCategory","setTotalByCategory","setCategoryMapField","categorySelectedRegion","setCategorySelectedRegion","zIndex","position","background","top","left","cat","overflow","BarChartSupplier","Supplier","selectedLocationCategoryMap","setSelectedLocationCategoryMap","selectedSupplier","setelectedSupplier","setTotalSuplier","currentRect","right","document","getElementById","clickEvt","MouseEvent","dispatchEvent","simulateClick","$","DataTable","columns","LocationsTable","setLocationCount","table","dom","paging","searching","destroy","bLengthChange","info","scrollY","scrollCollapse","search","count","cellSpacing","TextBoxTotal","TextBoxMap","Locations","setSummary","selectedLocation","setSelectedLocation","locationCount","scaleOp","valueToFill","max","App","then","loading","includes","hideLoader","minHeight","marginRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e4cee8a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport \"bootstrap-italia/dist/css/bootstrap-italia.min.css\";\nimport \"typeface-titillium-web\";\nimport \"typeface-roboto-mono\";\nimport \"typeface-lora\";\n\nexport const HeaderBar = () => {\n  return (\n    <>\n      {/* <Header small={false} theme=\"\" type=\"slim\">\n      \n      </Header> */}\n      <div className=\"row m-0\" style={{ backgroundColor: '#0059b3' }}>\n       \n        {/** TITLE + LOGO*/}\n        <div className=\"col-12 d-flex flex-column justify-content-center mainBanner\">\n          <div className=\"d-flex justify-content-center\">\n            <img src=\"logo.png\" alt=\"Logo\" className=\"main-logo\" />\n            <span className=\"pl-3\">Report Vaccini Anti COVID-19</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"../App.css\";\nimport \"bootstrap-italia/dist/css/bootstrap-italia.min.css\";\nimport \"typeface-titillium-web\";\nimport \"typeface-roboto-mono\";\nimport \"typeface-lora\";\n\nexport const FooterBar = () => {\n  return (\n    <>\n      <div className=\"footer-wrapper p-4 clearfix\">\n        <footer className=\"footer_container container\" id=\"footer\">\n          <div className=\"row title_row\">\n          <div className=\"col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pt-2 pb-2\">\n            <a href=\"http://covida19.herokuapp.com/calabria.html\" className=\"text-decoration-none\" target=\"_blank\" rel=\"noreferrer\">\n              <img src=\"logo_calabria.png\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n            </a>\n            <p className=\"pt-sm-0\">Regione Calabria</p>\n          </div>\n          <div className=\"col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pt-2 pb-2\">\n            <p className=\"pt-sm-0\">© 2021 Francesco Branda</p>\n          </div>\n          \n          </div>\n        </footer>\n      </div>\n    </>\n  );\n};\n","import { React } from \"react\";\nimport moment from \"moment\";\n\nexport const Total = (props) => {\n  return (\n    <div className=\"h-100 w-100 mt-2 mb-3 max-width-total\">\n      <div className=\"timestamp mx-auto\">\n        <h6 className=\"text-center pb-4\">\n          Ultimo aggiornamento: {\" \"}\n          {props.summary.timestamp && moment(props.summary.timestamp).format(\"DD-MM-YYYY HH:mm\")}\n        </h6>\n      </div>\n      {/* <div className=\"container\"> */}\n      <div className=\"d-flex flex-column justify-content-center\">\n        <div className=\"d-flex justify-content-center align-items-baseline\">\n          <img src=\"meds.png\" alt=\"meds\" className=\"pl-2 pr-5\" />\n          {\" \"}\n          <h1 className=\"pl-2 mt-4 font-weight-light\">{props.summary.tot?.toLocaleString('it')}</h1>\n        </div>\n        <span className=\"border-top mb-2\"></span>\n        <div className=\"d-flex justify-content-center\">\n          <img src=\"logo.png\" alt=\"fiore\" height=\"30\" />\n          <img src=\"logo.png\" alt=\"fiore\" height=\"30\" />\n          <img src=\"logo.png\" alt=\"fiore\" height=\"30\" className=\"pr-5\" />\n          {\" \"}\n          <h4 className=\"pl-2\">Totale somministrazioni</h4>\n        </div>\n      </div>\n    </div>\n    // </div>\n  );\n};\n","import * as _ from 'lodash';\nexport const hideLoader = () => {\n  let loading = document.getElementById('loader-custom');\n  if (loading) loading.className = !loading.className.includes('d-none') ? loading.className + ' d-none' : loading.className;\n}\nexport const showLoader = () => {\n  let loading = document.getElementById('loader-custom');\n  if (loading) loading.className = loading.className.includes('d-none') ? loading.className.replace('d-none', '') : loading.className;\n}\nexport const sumDose = (acc, x) => acc + +x?.TML_DOSE_1 + +x?.TML_DOSE_2;\nexport const sumDoseXY = (y, z) => (acc, x) => acc + +x?.[y] + +x?.[z];\nexport const sumYear = (accumulator, currentValue) => accumulator + currentValue;\nexport const sumDoseX = (y) => (acc, x) => acc + +x?.[y];\nexport const maxX = (y) => (acc, x) => (x?.[y] > acc ? x?.[y] : acc);\nexport const age = [\"16-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90+\"];\nexport const groupByAge = (array) => {\n  let _age;\n  if (Array.isArray(array) && array.length > 0) {\n    _age = age.map(el => {\n      let resMale = _.sum(array.filter(_el => _el.fascia_anagrafica.trim() === el).map(__el => __el.sesso_maschile));\n      let resFemale = _.sum(array.filter(_el => _el.fascia_anagrafica.trim() === el).map(__el => __el.sesso_femminile));\n      return { fascia_anagrafica: el, sesso_femminile: resFemale, sesso_maschile: resMale, totale: resMale + resFemale };\n    });\n  }\n  return _age;\n}\nexport const mapArrayByProp = (array, prop) => array.map((e) => e[prop]);\nexport const reduceSum = (array) => array.reduce(sumYear);\n\nexport const allTotalGender = (array) => {\n  let sessoMaschile = reduceSum(mapArrayByProp(array, 'sesso_maschile'));\n  let sessoFemminile = reduceSum(mapArrayByProp(array, 'sesso_femminile'));\n  return { gen_m: sessoMaschile, gen_f: sessoFemminile }\n}\nexport const aggrBy = (p) => (acc, x) => {\n  let key = x[p];\n  if (!acc[key]) {\n    acc[key] = [];\n  }\n  acc[key].push(x);\n  return acc;\n};\nexport const filterBy = (y) => (z) => (x) => {\n  return x[y] === z;\n};\nexport const filterByArea = filterBy(\"area\");\n\nexport const filterByAreaITA = filterByArea(\"ITA\");\nexport const filterByAge = filterBy(\"TML_FASCIA_ETA\");\nexport const mapBy = (y) =>\n  Object.keys(y).map((x) => {\n    return { [x]: { sum: y[x].reduce(sumDose, 0) } };\n  });\nexport const mapByX = (y, z) =>\n  Object.keys(y).map((x) => {\n    return { [x]: y[x].reduce(sumDoseX(z), 0) };\n  });\nconst inverse = (obj) => {\n  let retobj = {};\n  for (const key in obj) {\n    retobj[obj[key]] = key;\n  }\n  return retobj;\n};\nexport const simulateClick = (id) => {\n  if (document.getElementById(id) && id) {\n    let clickEvt = new MouseEvent('click', {\n      'bubbles': true,\n      'cancelable': true\n    });\n    document.getElementById(id).dispatchEvent(clickEvt);\n  }\n}\nexport const replaceArea = (x) => ({ ...x, area: areaMapping[x.area], code: x.area });\nexport const areaMapping = {\n  ABR: \"Abruzzo\",\n  BAS: \"Basilicata\",\n  CAL: \"Calabria\",\n  CAM: \"Campania\",\n  EMR: \"Emilia-Romagna\",\n  FVG: \"Friuli-Venezia Giulia\",\n  LAZ: \"Lazio\",\n  LIG: \"Liguria\",\n  LOM: \"Lombardia\",\n  MAR: \"Marche\",\n  MOL: \"Molise\",\n  PAB: \"P.A. Bolzano\",\n  PAT: \"P.A. Trento\",\n  PIE: \"Piemonte\",\n  PUG: \"Puglia\",\n  SAR: \"Sardegna\",\n  SIC: \"Sicilia\",\n  TOS: \"Toscana\",\n  UMB: \"Umbria\",\n  VDA: \"Valle d'Aosta\",\n  VEN: \"Veneto\",\n  \n};\n\n\nexport const areaMappingReverse = inverse(areaMapping);\n\n//\n//   const tot2 = data.reduce(sumDoseXY(\"TML_DOSE_1\", \"TML_DOSE_2\"), 0);\n//   const areasRAW = data.reduce(aggrBy(\"TML_AREA\"), {});\n//   const tot_m = data.reduce(sumDoseX(\"TML_SESSO_M\"), 0);\n//   const tot_f = data.reduce(sumDoseX(\"TML_SESSO_F\"), 0);\n//   const areas = mapBy(areasRAW);\n//   const fascia1619 = data.filter(filterByAge(\"16-19\"));\n//   const fascia2029 = data.filter(filterByAge(\"20-29\"));\n//   const totfascia1619 = fascia1619.reduce(sumDose, 0);\n//   const totfascia2029 = fascia2029.reduce(sumDose, 0);\n","import { sumDoseX, replaceArea, aggrBy, areaMapping } from \"./utils\";\nimport _ from 'lodash';\nconst baseURL =\n  \"https://raw.githubusercontent.com/fbranda/covid19-opendata-vaccini/master/dati\";\n\nconst sommVaxSummaryURL = `${baseURL}/somministrazioni-vaccini-summary-latest.json`;\nconst sommVaxDetailURL = `${baseURL}/somministrazioni-vaccini-latest.json`;\nconst vaxSummaryURL = `${baseURL}/vaccini-summary-latest.json`;\nconst vaxLocationsURL = `${baseURL}/punti-somministrazione-latest.json`;\nconst anagraficaSummaryURL = `${baseURL}/anagrafica-vaccini-summary-latest.json`;\nconst lastUpdateURL = `${baseURL}/last-update-dataset.json`;\nconst supplierDoses = `${baseURL}/consegne-vaccini-latest.json`;\nconst elaborate = (data) => {\n  console.log(data)\n  const tot = data.dataSommVaxSummary.data\n    .filter(d => d.area !== 'ITA')\n    .reduce(sumDoseX(\"totale\"), 0);\n  // datatable and map\n  const dataSupplier = data.dataSupplierDoses.data;\n  const dataSomeVaxDetail = data.dataSommVaxDetail.data.map(replaceArea);\n\n  const deliverySummary = data.dataVaxSummary.data.map(replaceArea);\n\n  // categories and ages summary\n  const categoriesAndAges = data.dataProfileSummary.data;\n  const dataVaxSomLatest = data?.dataSommVaxDetail?.data;\n\n  let totalDoses = {\n    prima_dose: _.sum(dataVaxSomLatest?.map(e => e?.prima_dose)),\n    seconda_dose: _.sum(dataVaxSomLatest?.map(e => e?.seconda_dose)),\n    vax_somministrati: _.sum(dataSupplier?.filter((e) => e?.data_consegna?.substr(0, 10) !== '2020-12-27')?.map(_e => _e?.numero_dosi))?.toLocaleString('it')\n  }\n  const categories = [\n    {\n      name: \"Operatori Sanitari e Sociosanitari\",\n      code: \"categoria_operatori_sanitari_sociosanitari\",\n      total: dataVaxSomLatest.reduce(\n        sumDoseX(\"categoria_operatori_sanitari_sociosanitari\"),\n        0\n      ),\n    },\n    {\n      name: \"Personale non sanitario\",\n      code: \"categoria_personale_non_sanitario\",\n      total: dataVaxSomLatest.reduce(\n        sumDoseX(\"categoria_personale_non_sanitario\"),\n        0\n      ),\n    },\n    {\n      name: \"Ospiti Strutture Residenziali\",\n      code: \"categoria_ospiti_rsa\",\n      total: dataVaxSomLatest.reduce(sumDoseX(\"categoria_ospiti_rsa\"), 0),\n    },\n    {\n      name: 'Over 80', \n      code: 'categoria_over80',\n      total: dataVaxSomLatest.reduce(sumDoseX(\"categoria_over80\"), 0),\n    },\n    {\n      name: 'Forze Armate', \n      code: 'categoria_forze_armate',\n      total: dataVaxSomLatest.reduce(sumDoseX(\"categoria_forze_armate\"), 0),\n    },\n    {\n      name: 'Personale Scolastico', \n      code: 'categoria_personale_scolastico',\n      total: dataVaxSomLatest.reduce(sumDoseX(\"categoria_personale_scolastico\"), 0),\n    }\n  ];\n\n  const groups = _.groupBy(dataSupplier, 'fornitore');\n  let allDosesSupplier = Object.keys(groups).map(k => {\n    let groupByKey = groups[k].map(group => group.numero_dosi);\n    let sumTotalDoses = _.sum(groupByKey);\n    return { totale: sumTotalDoses, fornitore: k, allDoses: groups[k] }\n  })\n\n  let totalSuplier = _.sum(allDosesSupplier.map(e => e?.totale));\n\n  let allDosesMapByArea = _.groupBy(dataSupplier, 'area');\n  let doesesByArea = Object.keys(allDosesMapByArea).map(area => {\n\n    let groupByArea = allDosesMapByArea[area].map((dose) => dose.numero_dosi);\n    let totalDosesByArea = _.sum(groupByArea);\n    return { area: areaMapping[area], dosi_somministrate: totalDosesByArea }\n  })\n\n  const categoriesByRegionRAW = data.dataSommVaxSummary.data.reduce(\n    aggrBy(\"area\"),\n    {}\n  );\n\n  let categoriesByRegions = {};\n  Object.keys(categoriesByRegionRAW).map((x) => {\n\n    categoriesByRegions[x] = [\n      {\n        name: \"Operatori Sanitari e Sociosanitari\",\n        code: \"categoria_operatori_sanitari_sociosanitari\",\n        total: categoriesByRegionRAW[x].reduce(\n          sumDoseX(\"categoria_operatori_sanitari_sociosanitari\"),\n          0\n        ),\n      },\n      {\n        name: \"Personale non sanitario\",\n        code: \"categoria_personale_non_sanitario\",\n        total: categoriesByRegionRAW[x].reduce(\n          sumDoseX(\"categoria_personale_non_sanitario\"),\n          0\n        ),\n      },\n      {\n        name: \"Ospiti Strutture Residenziali\",\n        code: \"categoria_ospiti_rsa\",\n        total: categoriesByRegionRAW[x]?.reduce(\n          sumDoseX(\"categoria_ospiti_rsa\"),\n          0\n        ),\n\n      },\n      {\n        name: 'Over 80',\n        code: 'categoria_over80',\n        total: categoriesByRegionRAW[x]?.reduce(sumDoseX(\"categoria_over80\"), 0),\n      },\n      {\n        name: 'Forze Armate',\n        code: 'categoria_forze_armate',\n        total: categoriesByRegionRAW[x]?.reduce(sumDoseX(\"categoria_forze_armate\"), 0),\n      },\n      {\n        name: 'Personale Scolastico',\n        code: 'categoria_personale_scolastico',\n        total: categoriesByRegionRAW[x]?.reduce(sumDoseX(\"categoria_personale_scolastico\"), 0),\n      }\n    ];\n    return categoriesByRegions;\n  });\n\n  deliverySummary.forEach(ds => {\n    if (categoriesByRegions[ds.code]) {\n      ds['byCategory'] = categoriesByRegions[ds.code].reduce(\n        aggrBy(\"code\"),\n        {}\n      )\n    } else {\n      ds['byCategory'] = {\n        cat_oss: [{ name: \"Operatori Sanitari e Sociosanitari\", code: \"cat_oss\", total: 0 }],\n        cat_pns: [{ name: \"Personale non sanitario\", code: \"cat_pns\", total: 0 }],\n        cat_rsa: [{ name: \"Ospiti Strutture Residenziali\", code: \"cat_rsa\", total: 0 }],\n        over60: [{ name: \"Over 80\", code: \"over60\", total: 0 }]\n      }\n    }\n  })\n\n  const deliveredByArea = _.groupBy(deliverySummary, 'code');\n\n  const locations = data.dataVaxLocations.data.map(replaceArea);\n\n  let maxNumberOfLocations = 0\n\n  const locationsByRegion = _(data.dataVaxLocations.data.map(replaceArea))\n    .groupBy('area')\n    .map((items, area)=>{\n      maxNumberOfLocations = maxNumberOfLocations > items.length ? maxNumberOfLocations : items.length;\n      return {area: area, locations: items.length}\n    }).value();\n\n  const totalDeliverySummary = _(data.dataSommVaxDetail.data.map(replaceArea))\n    .groupBy('code')\n    .map((items, code)=>{\n      const details = _.head(deliveredByArea[code])\n      return ({\n        code: code,\n        area: _.head(items)?.area, \n        categoria_operatori_sanitari_sociosanitari: _.sumBy(items, 'categoria_operatori_sanitari_sociosanitari'),\n        categoria_over80: _.sumBy(items, 'categoria_over80'),\n        categoria_ospiti_rsa: _.sumBy(items, 'categoria_ospiti_rsa'),\n        categoria_personale_non_sanitario: _.sumBy(items, 'categoria_personale_non_sanitario'),\n        categoria_forze_armate: _.sumBy(items, 'categoria_forze_armate'),\n        categoria_personale_scolastico: _.sumBy(items, 'categoria_personale_scolastico'),\n        byAge: _(items)\n                  .groupBy('fascia_anagrafica')\n                  .map((rows, age)=>{\n                    const dosi_somministrate = _.sumBy(rows, (r)=>r.sesso_maschile + r.sesso_femminile);\n                    const percentage = dosi_somministrate/(details.dosi_consegnate || 1);\n                    return {\n                      age: age,\n                      fascia_anagrafica: age,\n                      dosi_somministrate,\n                      dosi_consegnate: details.dosi_consegnate || 0,\n                      percentuale_somministrazione: +(percentage*100).toFixed(1),\n                      area: _.head(items)?.area,\n                      totale: dosi_somministrate\n                  }}).value(),\n        sesso_femminile: _.sumBy(items, 'sesso_femminile'),\n        sesso_maschile: _.sumBy(items, 'sesso_maschile'),\n        dosi_consegnate: details.dosi_consegnate || 0,\n        dosi_somministrate: details.dosi_somministrate || 0,\n        percentuale_somministrazione: details.percentuale_somministrazione || 0\n      })}).value();\n\n\n    const totalDeliverySummaryByAge = _(data.dataSommVaxDetail.data.map(replaceArea))\n      .groupBy(i => i['fascia_anagrafica'].toString().trim())\n      .map((rows, age)=>{\n        const details = _(rows).groupBy('code').map((rowsData, code)=>{\n          const dosi_somministrate = _.sumBy(rowsData, (r)=>r.sesso_maschile + r.sesso_femminile);\n          const percentage = dosi_somministrate/(_.head(deliveredByArea[code]).dosi_consegnate || 1);\n          return {\n            age: age,\n            dosi_somministrate,\n            sesso_maschile: _.sumBy(rowsData, 'sesso_maschile'),\n            sesso_femminile: _.sumBy(rowsData, 'sesso_femminile'),\n            code: code,\n            dosi_consegnate: _.head(deliveredByArea[code]).dosi_consegnate || 0,\n            percentuale_somministrazione: +(percentage*100).toFixed(1),\n            area: _.head(rowsData).area,\n            //details: rows\n          }\n        })\n        .value()\n        return {\n          age: age,\n          details: details\n      }})\n      .groupBy('age')\n      .value()\n\n  const gender = {\n    gen_m: categoriesAndAges.reduce(sumDoseX(\"sesso_maschile\"), 0),\n    gen_f: categoriesAndAges.reduce(sumDoseX(\"sesso_femminile\"), 0),\n  };\n\n  const timestamp = data.dataLastUpdate.ultimo_aggiornamento;\n  const aggr = {\n    timestamp,\n    tot,\n    deliverySummary,\n    categoriesAndAges,\n    categories,\n    categoriesByRegions,\n    locations,\n    gender,\n    dataSomeVaxDetail,\n    locationsByRegion,\n    maxNumberOfLocations,\n    allDosesSupplier,\n    doesesByArea,\n    totalSuplier,\n    totalDoses,\n    totalDeliverySummaryByAge,\n    totalDeliverySummary\n  };\n  return aggr;\n};\n\nexport const loadData = async () => {\n  const [\n    resSommVaxSummary, \n    resSommVaxDetail, \n    resVaxSummary,\n    resProfileSummaryURL,\n    resVaxLocations,\n    resLastUpdate,\n\t  resSupplierDoses\n  ] = await Promise.all([\n    fetch(sommVaxSummaryURL), \n    fetch(sommVaxDetailURL), \n    fetch(vaxSummaryURL),\n    fetch(anagraficaSummaryURL),\n    fetch(vaxLocationsURL),\n    fetch(lastUpdateURL),\n\t  fetch(supplierDoses)\n  ])\n\n  const [\n    dataSommVaxSummary,\n    dataSommVaxDetail,\n    dataVaxSummary,\n    dataProfileSummary,\n    dataVaxLocations,\n    dataLastUpdate,\n\t  dataSupplierDoses\n  ] = await Promise.all([\n    resSommVaxSummary.json(),\n    resSommVaxDetail.json(),\n    resVaxSummary.json(),\n    resProfileSummaryURL.json(),\n    resVaxLocations.json(),\n    resLastUpdate.json(),\n\t  resSupplierDoses.json()\n  ])\n  \n  return {\n    ...elaborate({\n      dataSommVaxSummary,\n      dataSommVaxDetail,\n      dataVaxSummary,\n      dataProfileSummary,\n      dataLastUpdate,\n      dataVaxLocations,\n\t  dataSupplierDoses\n    }),\n  };\n};\n","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"../App.css\";\nimport { maxX } from \"../utils\";\n\nexport const BarChart = ({\n  handleDeliveryBarChartClick, \n  height,\n  width,\n  data,\n  selected,\n  property,\n  title,\n  ytitle\n  }) => {\n\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n      doExit();\n      draw();\n  // eslint-disable-next-line \n  },[data, selected]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n\n    const maxScale = data?.reduce(maxX(property.yprop), 0) || 0;\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 50, x: 50 };\n\n    // axis\n    const xScale = d3.scaleBand().padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, maxScale]); //max scale should be dynamic\n    yScale.range([height, 0]);\n    xScale.range([0, width]).domain(data.map((d) => d[property.xprop]));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-bar\");\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 2 + margin.x)\n      .attr(\"y\", margin.y / 2)\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(title);\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", -(height / 2) - margin.y)\n      .attr(\"y\", margin.x / 2.4)\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"class\", \"title\")\n      .text(ytitle);\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .style('font-size', 20)\n      .call(d3.axisBottom(xScale));\n\n    const path = chart.selectAll().data(data);\n\n    path\n      .enter()\n      .append(\"rect\").on('click', (e, d) => {\n        handleDeliveryBarChartClick(d);\n      })\n      .attr('id', (d) => d?.fascia_anagrafica)\n      .attr('opacity', (d) => {\n        if(selected){\n          return selected === d?.fascia_anagrafica ? 1 : 0.3\n        }else{\n          return 1\n        }\n      })\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", (d) => xScale(d[property.xprop]))\n      .attr(\"y\", (d) => yScale(d[property.yprop]))\n      .attr(\"height\", (d) => height - yScale(d[property.yprop]))\n      .attr(\"width\", xScale.bandwidth())\n      .append(\"title\")\n      .attr(\"x\", (d) => xScale(d[property.xprop]))\n      .attr(\"y\", (d) => yScale(d[property.yprop]))\n      .text((d) => `Fascia ${d[property.xprop]} totale: ${d[property.yprop]}`)\n\n    path\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"bartext\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"x\", (d) => xScale(d[property.xprop]) + 35)\n      .attr(\"y\", (d) =>\n        height - yScale(d[property.yprop]) >= 0\n          ? yScale(d[property.yprop]) - 10\n          : yScale(d[property.yprop])\n      )\n      .text((d) => d[property.yprop].toLocaleString('it'));\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef} className=\"chart svg-container\">\n      <svg ref={myRef} className=\"svg-content-responsive\"></svg>\n    </div>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport _ from 'lodash';\n\nimport \"./MapArea.css\"\n\nexport const MapArea = ({\n  handleMapDeliveryClick,\n  fillMapDeliveryArea,\n  fillBy,\n  summary,\n  tooltip\n}) => {\n  const [geographies, setGeographies] = useState([]);\n  const [maxValue, setMaxValue] = useState(0);\n\n  useEffect(()=>{\n    const maxValue = _.maxBy(summary || {}, fillBy)\n    setMaxValue(maxValue ? maxValue[fillBy] : 0)\n  },[summary, fillBy])\n\n  const width = 498,\n    height = 478;\n\n  const projection = d3\n    .geoAlbers()\n    .center([0, 41])\n    .rotate([347, 0])\n    .parallels([35, 45])\n    .scale(2200)\n    .translate([width / 2, height / 2]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(\"data/geo/it.json\");\n      const data = await res.json();\n      setGeographies(topojson.feature(data, data.objects.regions).features);\n    };\n    fetchData();\n  }, []);\n  \n  return (\n    <div className=\"map-area mt-sx-3\">\n      <svg className=\"h-100 w-100\" height={height} >\n        <g className=\"countries\" >\n          {geographies.map((d, i) => {\n            let reg_name = d.properties.reg_name;\n            let regions = _.filter(summary, i => i.area === reg_name)\n            \n            let region = {};\n            if (regions && regions.length > 0) {\n              region = regions[0];\n            }\n\n            return (\n              <path\n                key={`path-${i}`}\n                d={d3.geoPath().projection(projection)(d)}\n                className=\"country\"\n                id={`${region?.area?.trim()}`}\n                fill={fillMapDeliveryArea({region, maxValue, field: fillBy})}\n                stroke=\"#FFFFFF\"\n                strokeWidth={0.7}\n                onClick={() => handleMapDeliveryClick(region)}\n              >\n                <title>\n                  <span className=\"bg-info\">\n                    {tooltip(region)}\n                  </span>\n                </title>\n              </path>\n            );\n          })}\n          );\n        </g>\n      </svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { find, head, max, isEmpty } from \"lodash\";\nimport { BarChart } from \"./../components/BarChart\";\nimport { MapArea } from \"./../components/MapArea\";\n\nexport const Deliveries = ({ data }) => {\n  const [deliveryMapData, setDeliveryMapData] = useState([]);\n  const [deliveryTableData, setDeliveryTableData] = useState([]);\n  const [deliverySelectedRegion, setDeliverySelectedRegion] = useState(null);\n  const [totalDelivery, setTotalDelivery] = useState(0);\n  const [totalAgeByGender, setTotalAgeByGender] = useState({});\n  const [deliveryBarChartData, setdeliveryBarChartData] = useState([]);\n  const [selectedAge, setSelectedAge] = useState(null);\n\n  useEffect(() => {\n    if (!isEmpty(data)) {\n      setDeliveryMapData(data.totalDeliverySummary);\n      setdeliveryBarChartData(data.categoriesAndAges);\n      setTotalAgeByGender(data.gender);\n      setDeliveryTableData(data.totalDeliverySummary);\n      setTotalDelivery(data.tot);\n    }\n  }, [data]);\n\n  const resetFilter = () => {\n    setDeliverySelectedRegion(null);\n    setDeliveryTableData(data.totalDeliverySummary);\n    setTotalDelivery(data.tot);\n    setTotalAgeByGender(data.gender);\n    setdeliveryBarChartData(data.categoriesAndAges);\n    setSelectedAge(null);\n    setDeliveryMapData(data.totalDeliverySummary);\n  };\n\n  const fillMapDeliveryArea = ({ region, maxValue, field }) => {\n    let scaleOp = 0;\n    if (region.code === deliverySelectedRegion) {\n      scaleOp = 1;\n    } else if (!deliverySelectedRegion) {\n      scaleOp = max([region[field] / maxValue, 0.1]);\n    } else {\n      const valueToFill = region[field] / (2 * maxValue);\n      scaleOp = max([valueToFill, 0.1]);\n    }\n    return `rgba(0,102,204,${scaleOp}) `;\n  };\n\n  const handleMapDeliveryClick = (region) => {\n    if (selectedAge) {\n      resetFilter();\n    }\n\n    if (deliverySelectedRegion === region.code) {\n      resetFilter();\n    } else {\n      const deliveryTableFilteredData = find(\n        data.totalDeliverySummary,\n        (d) => d.code === region.code\n      );\n\n      setDeliveryTableData([deliveryTableFilteredData]);\n      setdeliveryBarChartData(deliveryTableFilteredData?.byAge || []);\n      setDeliverySelectedRegion(region.code);\n      setTotalDelivery(deliveryTableFilteredData.dosi_somministrate);\n      setTotalAgeByGender({\n        gen_m: deliveryTableFilteredData.sesso_maschile,\n        gen_f: deliveryTableFilteredData.sesso_femminile,\n      });\n    }\n  };\n\n  const handleDeliveryBarChartClick = (bar) => {\n    if (deliverySelectedRegion) {\n      resetFilter();\n    }\n\n    if (bar.fascia_anagrafica === selectedAge) {\n      resetFilter();\n    } else {\n      const details = find(\n        data.categoriesAndAges,\n        (i) => i.fascia_anagrafica === bar.fascia_anagrafica\n      );\n\n      setdeliveryBarChartData(data.categoriesAndAges);\n      setTotalDelivery(details.totale);\n      setSelectedAge(bar.fascia_anagrafica);\n      setDeliveryTableData(\n        head(data.totalDeliverySummaryByAge[bar.fascia_anagrafica]).details\n      );\n      setTotalAgeByGender({\n        gen_m: bar.sesso_maschile,\n        gen_f: bar.sesso_femminile,\n      });\n      setDeliveryMapData(\n        head(data.totalDeliverySummaryByAge[bar.fascia_anagrafica]).details\n      );\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-12 d-flex justify-content-end\">\n          <img alt=\"\" src=\"\" onClick={resetFilter} />\n        </div>\n      </div>\n\n      <div className=\"row\" style={{ backgroundColor: \"#F8FBFE\" }}>\n        <div className=\"col-12 col-lg-5 h-100 order-md-2 order-lg-1 \">\n          <div className=\"container-info d-none d-sm-none d-md-flex d-lg-flex\">\n            \n              \n           \n          </div>\n        </div>\n\n      \n      <div\n        className=\"col-12  d-flex justify-content-center align-items-center p-5 bg-title-plot\"\n      >\n        \n      </div>\n\n\n\n\n\n\n\n\n\n     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n      <div\n        className=\"row position-powerbi\"\n        style={{ backgroundColor: \"#F8FBFE\" }}\n      >\n        <div className=\"col-12 col-md-6 align-items-end testo-info-campania d-none d-sm-none d-md-flex d-lg-flex\"></div>\n        <div className=\"col-12 col-md-6  position-relative\">\n          <div className=\"bg-gradient-bar\"></div>\n          <div className=\"row\">\n            <div className=\"col-6 d-flex align-items-baseline\">\n              <img src=\"user_f.png\" alt=\"users\" width=\"75px\" />\n              <span className=\"text-center font-weight-light text-white\">\n                <h3 className=\"total_gender\">\n                  {totalAgeByGender?.gen_f?.toLocaleString(\"it\")}\n                </h3>\n              </span>\n            </div>\n            <div className=\"col-6  d-flex align-items-baseline\">\n              <img src=\"user_m.png\" alt=\"users\" width=\"75px\" />\n              <span className=\"text-center font-weight-light text-white\">\n                <h3 className=\"total_gender\">\n                  {totalAgeByGender?.gen_m?.toLocaleString(\"it\")}\n                </h3>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 col-md-5\" style={{ backgroundColor: \"#17324D\" }}>\n          <div className=\"p-4 position-relative\">\n            <div style={{ height: 100 }}>\n              <img src=\"group_person.svg\" alt=\"Logo\" className=\"img-fluid\" />\n            </div>\n            <div className=\"text-white w-100\">\n              <div className=\"w-100 h-100 d-flex justify-content-end\">\n                <img src=\"logo.png\" width=\"40\" height=\"40\" alt=\"Logo\" />\n              </div>\n              <div className=\"w-100  h-100 d-flex justify-content-end text-right\">\n                <h3>\n                  Somministrazioni<br></br> per fasce di età\n                </h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"col-12  col-md-7\"\n          style={{\n            backgroundColor: \"#17324D\",\n          }}\n        >\n          <BarChart\n            title=\"\"\n            xtitle=\"Fascia d'età\"\n            ytitle=\"\"\n            width={800}\n            handleDeliveryBarChartClick={handleDeliveryBarChartClick}\n            height={300}\n            selected={selectedAge}\n            property={{ xprop: \"fascia_anagrafica\", yprop: \"totale\" }}\n            data={deliveryBarChartData}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"../App.css\";\nimport { maxX } from \"../utils\";\n\nexport const HBarChart = (\n  {\n    handleRectClick, \n    height,\n    width,\n    data,\n    selectedCodeCategory,\n    property,\n    title,\n    ytitle\n  }\n  ) => {\n\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n    doExit();\n    draw();\n    // eslint-disable-next-line \n  },[data, selectedCodeCategory]);\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n    const maxScale = data?.reduce(maxX(property.yprop), 0) || 0;\n\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 50, x: 170 };\n\n    // Add X axis\n    const xScale = d3.scaleLinear().domain([0, maxScale]).range([0, width-20]);\n    // Y axis\n    const yScale = d3\n      .scaleBand()\n      .padding(0.4)\n      .range([0, height])\n      .domain(data.map((d) => d[property.xprop]))\n      \n      \n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-horizontal-bar\")\n    \n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 2 + margin.x)\n      .attr(\"y\", margin.y / 2)\n      .attr(\"class\", \"hb-title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(title);\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n      \n\n    chart.append(\"g\")\n      .attr(\"class\", \"hb-axis\")\n      .call(d3.axisLeft(yScale))\n      .style(\"font-size\", \"18px\")\n      .attr(\"transform\", `translate(85,0)`)\n    \n\n    const path = chart.selectAll().data(data);\n\n    path\n      .enter()\n      .append(\"rect\").on('click', (e, d) => {\n        handleRectClick(d);\n      })\n      .attr('opacity', (d) => {\n        let opac = selectedCodeCategory === d.code ? 1 : !selectedCodeCategory ? 1 : 0.3;\n        return opac;\n      })\n      .attr(\"class\", \"hb-bar\")\n      .attr(\"x\", xScale(0)+95)\n      .attr(\"y\", (d) => yScale(d[property.xprop]))\n      .attr(\"width\", (d) => xScale(d[property.yprop]))\n      .attr(\"height\", yScale.bandwidth())\n      .append(\"hb-title\")\n      .attr(\"x\", (d) => xScale(d[property.xprop]))\n      .attr(\"y\", (d) => yScale(d[property.yprop]))\n      .text(\n        (d) =>\n          `Fascia ${d[property.xprop]} totale: ${d[property.yprop]}`\n      )\n\n    path\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"hb-bartext\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"x\", (d) => xScale(d[property.yprop]) + 140)\n      .attr(\"y\", (d) =>\n        height - yScale(d[property.xprop]) >= 0\n          ? yScale(d[property.xprop]) + 20\n          : yScale(d[property.xprop])\n      )\n      .text((d) => d[property.yprop].toLocaleString('it'));\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef} className=\"chart svg-container\" style={{marginTop: 40}}>\n      <svg ref={myRef} className=\"svg-content-responsive\"></svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { find, max, isEmpty } from \"lodash\";\nimport { HBarChart } from \"./../components/HBarChart\";\nimport { MapArea } from \"./../components/MapArea\";\n\nexport const Categories = ({ data }) => {\n  const [categoryData, setCategoryData] = useState([]);\n  const [categoryMapData, setCategoryMapData] = useState([]);\n  const [selectedCodeCategory, setSelectedCodeCategory] = useState(null);\n  const [totalByCategory, setTotalByCategory] = useState(0);\n  const [categoryMapField, setCategoryMapField] = useState(\n    \"dosi_somministrate\"\n  );\n  const [categorySelectedRegion, setCategorySelectedRegion] = useState(null);\n\n  useEffect(() => {\n    if (!isEmpty(data)) {\n      setCategoryData(data.categories);\n      setTotalByCategory(data.tot);\n      setCategoryMapData(data?.totalDeliverySummary);\n    }\n  }, [data]);\n\n  const resetFilter = () => {\n    setCategorySelectedRegion(null);\n    setCategoryData(data?.categories);\n    setTotalByCategory(data?.tot);\n    setCategoryMapData(data?.totalDeliverySummary);\n    setSelectedCodeCategory(null);\n    setCategoryMapField(\"dosi_somministrate\");\n  };\n\n  const handleMapCategoryClick = (region) => {\n    if (selectedCodeCategory) {\n      resetFilter();\n    }\n\n    if (categorySelectedRegion === region.code) {\n      resetFilter();\n    } else {\n      setCategorySelectedRegion(region.code);\n      setCategoryData(data.categoriesByRegions[region.code]);\n      setTotalByCategory(region.dosi_somministrate);\n    }\n  };\n\n  const fillMapCategoryArea = ({ region, maxValue, field }) => {\n    let scaleOp = 0;\n    if (region.code === categorySelectedRegion) {\n      scaleOp = 1;\n    } else if (!categorySelectedRegion) {\n      scaleOp = max([region[field] / maxValue, 0.1]);\n    } else {\n      const valueToFill = region[field] / (2 * maxValue);\n      scaleOp = max([valueToFill, 0.1]);\n    }\n    return `rgba(0,102,204,${scaleOp}) `;\n  };\n\n  const handleCategoryBarChartClick = (cat) => {\n    if (categorySelectedRegion) {\n      resetFilter();\n    }\n\n    if (selectedCodeCategory === cat?.code) {\n      resetFilter();\n    } else if (cat) {\n      const details = find(data.categories, (i) => i.code === cat.code);\n      setSelectedCodeCategory(cat.code);\n      setCategoryMapField(cat.code);\n      setTotalByCategory(details?.total);\n    }\n  };\n\n  return (\n    <div className=\"row \">\n      <div\n        style={{ marginTop: 40 }}\n        className=\"col-12  d-flex justify-content-center align-items-center p-5 bg-title-plot\"\n      >\n        <img\n          src=\"logo.png\"\n          width=\"86\"\n          height=\"86\"\n          alt=\"Logo\"\n          className=\"img-fluid\"\n          style={{ zIndex: 10 }}\n        />\n        <h3 className=\"text-center\">Somministrazioni per categoria</h3>\n      </div>\n      <div className=\"col-12 col-md-12 h-100  \">\n        <div\n          className=\"mb-5  d-lg-none \"\n          style={{\n            position: \"relative\",\n            background: \"#013366\",\n          }}\n        >\n          <div className=\"text-white w-100\">\n            <div className=\"w-100  h-100 d-flex justify-content-start pt-5 pl-4\">\n              <h5>\n                Totale<br></br>somministrazioni\n              </h5>\n            </div>\n            <div className=\"w-100  h-100 d-flex justify-content-start pl-4\">\n              <p className=\"numeri_box\">\n                {totalByCategory && totalByCategory.toLocaleString(\"it\")}\n              </p>\n            </div>\n            \n          </div>\n        </div>\n        <div\n          className=\"col-3 col-md-3  d-none d-lg-block\"\n          style={{ height: 100 }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              background: \"#17324D\",\n              top: -90,\n              left: 105,\n            }}\n          >\n            <div className=\"text-white w-100\">\n              <div className=\"w-100  h-100 d-flex justify-content-start pt-3 pl-4\">\n                <h5>\n                  Totale<br></br>somministrazioni\n                </h5>\n              </div>\n              <div className=\"w-100  h-100 d-flex justify-content-start pl-4\">\n                <p className=\"numeri_box\">\n                  {totalByCategory && totalByCategory.toLocaleString(\"it\")}\n                </p>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-12  d-flex justify-content-center\">\n        <HBarChart\n          title=\"\"\n          xtitle=\"Vaccinazioni per categoria\"\n          handleRectClick={handleCategoryBarChartClick}\n          ytitle=\"\"\n          width={+350}\n          height={+360}\n          property={{ xprop: \"name\", yprop: \"total\" }}\n          data={categoryData}\n          selectedCodeCategory={selectedCodeCategory}\n        />\n      </div>\n      <div className=\"col-12 col-md-6 h-100\" style={{ overflow: \"hidden\" }}>\n        <div className=\"p-4 position-relative d-lg-none\">\n          <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n            <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n            <h5 className=\"pl-3 pl-sm-1\">\n              Vaccinazioni\n              <br /> per regione\n            </h5>\n          </div>\n        </div>\n        <div\n          className=\"p-4 position-relative d-none d-lg-block\"\n          style={{ left: \"300px\", top: \"190px\" }}\n        >\n          <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n            <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n            <h5 className=\"pl-3 pl-sm-1\">\n              Somministrazioni\n              <br /> per regione\n            </h5>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n};\n","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"../App.css\";\nimport { maxX } from \"../utils\";\n\nexport const BarChartSupplier = (props) => {\n\n  const width = +props.width, //hack to get int\n    height = +props.height;\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n    doExit();\n    draw();\n    // eslint-disable-next-line \n  }, [props]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n    const data = props?.data || [];\n    const maxScale = data?.reduce(maxX(props.property.yprop), 0) || 0;\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 50, x: 20 };\n\n    // axis\n    const xScale = d3.scaleBand().padding(0.5);\n    const yScale = d3.scaleLinear().domain([0, maxScale]); //max scale should be dynamic\n    yScale.range([height, 0]);\n    xScale.range([0, width]).domain(data.map((d) => d[props.property.xprop]));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-bar\");\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 8 + margin.x)\n      .attr(\"y\", margin.y / 6)\n      .attr(\"class\", \"title-bar-dark\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(props.title);\n\n    // svg\n    //   .append(\"text\")\n    //   .attr(\"x\", width / 2 + margin.x)\n    //   .attr(\"y\", margin.y * 2)\n    //   .attr(\"transform\", `translate(0,${height - margin.y / 4})`)\n    //   .attr(\"class\", \"title-bar\")\n    //   .text(props.xtitle);\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", -(height / 2) - margin.y)\n      .attr(\"y\", margin.x / 2.4)\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"class\", \"title-bar-dark\")\n      .text(props.ytitle);\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    // chart.append(\"g\").attr(\"class\", \"axis\").call(d3.axisLeft(yScale));\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis-dark\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .style('font-size', 20)\n      .call(d3.axisBottom(xScale));\n\n    // chart\n    //   .append(\"g\")\n    //   .attr(\"class\", \"grid-hline\")\n    //   .call(d3.axisLeft().scale(yScale).tickSize(-width, 0, 0).tickFormat(\"\"));\n\n    const path = chart.selectAll().data(data);\n\n    path\n      .enter()\n      .append(\"rect\").on('click', (e, d) => {\n        props.handleDeliveryBarChartClick(d);\n      })\n      .attr('id', (d) => d?.fornitore)\n      .attr('opacity', (d) => {\n        let opac = props.selected?.fornitore === d?.fornitore ? 1 : !props.selected ? 1 : 0.3;\n        return opac;\n      })\n      .attr(\"class\", \"bg-bar\")\n      .attr(\"x\", (d) => +xScale(d[props.property.xprop]))\n      .attr(\"y\", (d) => yScale(d[props.property.yprop]))\n      .attr(\"height\", (d) => height - yScale(d[props.property.yprop]))\n      .attr(\"width\", xScale.bandwidth())\n      .append(\"title\")\n      .attr(\"x\", (d) => xScale(d[props.property.xprop]))\n      .attr(\"y\", (d) => yScale(d[props.property.yprop]))\n      .text((d) => `Fascia ${d[props.property.xprop]} totale: ${d[props.property.yprop]}`)\n\n    path\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"bartext-dark\")\n      .attr(\"text-anchor\", \"center\")\n\n      .attr(\"fill\", \"black\")\n      .attr(\"x\", (d) => xScale(d[props.property.xprop]))\n      .attr(\"y\", (d) =>\n        height - yScale(d[props.property.yprop]) >= 0\n          ? yScale(d[props.property.yprop]) - 10\n          : yScale(d[props.property.yprop])\n      )\n      .text((d) => d[props.property.yprop]?.toLocaleString('it'));\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef}>\n      {/* <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n        <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n        <h5 className=\"pl-3 pl-sm-1\">Distribuzione vaccini per fornitore</h5>\n      </div> */}\n      <svg ref={myRef}></svg>\n    </div>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport { isEmpty } from \"lodash\";\nimport { simulateClick } from './../utils';\n\nimport { BarChartSupplier } from \"./BarChartsSupplier\";\n// import { MapAreaBySupplier } from \"./MapAreaBySupplier\";\nexport const Supplier = (data) => {\n    // const [barState, setBarState] = useState(null);\n    const [selectedLocationCategoryMap, setSelectedLocationCategoryMap] = useState(null);\n    const [selectedSupplier, setelectedSupplier] = useState(null);\n    // const [maxByCategory, setMaxByCategory] = useState(0);\n    // const [summary, setSummary] = useState({});\n    const [deliveryBarChartData, setdeliveryBarChartData] = useState([]);\n    const [totalSuplier, setTotalSuplier] = useState(0);\n\n    const resetFilter = () => {\n        // setSummary(data);\n        // setMaxByCategory(data?.data?.totalSuplier)\n        setdeliveryBarChartData(data?.data?.allDosesSupplier);\n        setTotalSuplier(data?.data?.totalSuplier);\n        setelectedSupplier(null);\n        setSelectedLocationCategoryMap(null);\n        // setBarState(null);\n        setTotalSuplier(data?.data?.totalSuplier);\n\n    }\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            // setSummary(data);\n            // setMaxByCategory(data?.data?.totalSuplier)\n            setdeliveryBarChartData(data?.data?.allDosesSupplier);\n            setTotalSuplier(data?.data?.totalSuplier);\n        }\n    }, [data]);\n\n    // const loadBar = (countryIndex) => {\n    //     let barData = data?.data?.allDosesSupplier;\n    //     let ar = barData.map((e) => {\n    //         let group = e.allDoses.filter((el) => areaMapping[el.area] === countryIndex.area || el.area === countryIndex?.code);\n    //         let totalNumberDosesByRegion = sum(group.map(eGroup => eGroup.numero_dosi));\n    //         return { fornitore: e.fornitore, totale: totalNumberDosesByRegion }\n    //     })\n    //     let total = sum(ar.map(e => e?.totale))\n    //     setTotalSuplier(total);\n    //     // setMaxByCategory(total);\n    //     setdeliveryBarChartData(ar);\n    //     setSelectedLocationCategoryMap(countryIndex);\n    // };\n    // const handleCountryClickCategories = (countryIndex) => {\n    //     if (countryIndex === selectedLocationCategoryMap) {\n    //         resetFilter();\n    //     } else if (selectedSupplier) {\n    //         setelectedSupplier(null);\n    //         loadBar(countryIndex);\n    //     } else {\n    //         loadBar(countryIndex);\n    //     }\n    // };\n    const handleDeliveryBarChartClick = (bar) => {\n        if (selectedSupplier === bar) {\n            resetFilter();\n        } else if (selectedLocationCategoryMap) {\n            resetFilter();\n            simulateClick(bar.fornitore);\n        } else {\n            handleRectClick(bar);\n            setelectedSupplier(bar);\n            setTotalSuplier(bar?.totale);\n            // setMaxByCategory(bar?.totale)\n        }\n    }\n\n    const handleRectClick = (currentRect) => {\n        // let doseBySuppier = groupBy(summary?.data?.allDosesSupplier?.filter(el => el?.fornitore === currentRect?.fornitore)[0]?.allDoses, 'area');\n        // let doses = Object.keys(areaMapping).map(k => {\n        //     let totalDoses;\n        //     let area = areaMapping[k];\n        //     totalDoses = doseBySuppier[k] ? sum(doseBySuppier[k].map((d => d.numero_dosi))) : 0;\n        //     return { area: area, dosi_consegnate: totalDoses }\n        // })\n        // setBarState(doses);\n        setelectedSupplier(currentRect)\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 col-md-12 h-100\">\n                <div className=\"col-12 d-flex justify-content-center align-items-center p-5 bg-title-plot\">\n                    <h3 className=\"text-center\">Distribuzione vaccini per fornitore</h3>\n                    <img src=\"logo.png\" width=\"86\" height=\"86\" alt=\"Logo\" className=\"d-none d-lg-block\"\n                        style={{\n                            position: \"absolute\",\n                            right: 28,\n                            zIndex: 10\n                        }} />\n                </div>\n                {/* BOX BLU */}\n                <div className=\"col-12 col-md-12 h-100\">\n                    {/* LAYOUT MOBILE */}\n                    <div className=\"mb-5 d-lg-none\" style={{\n                        position: 'relative',\n                        background: '#013366',\n                    }}>\n                        <div className=\"text-white w-100\">\n                            <div className=\"w-100  h-100 d-flex justify-content-start pt-5 pl-4\">\n                                <h5>Totale vaccini distribuiti</h5>\n                            </div>\n                            <div className=\"w-100  h-100 d-flex justify-content-start pl-4\">\n                                <p className=\"numeri_box\">{totalSuplier?.toLocaleString('it')}             </p>\n                            </div>\n                            <div className=\"col-12 d-flex justify-content-end  pb-2\">\n                                <img alt=\"\" src=\"\" onClick={resetFilter} height={35} />\n                            </div>\n                        </div>\n                    </div>\n                    {/* LAYOUT DESKTOP */}\n                    <div className=\"offset-md-9 col-md-3  d-none d-lg-block\" style={{ height: 100 }}>\n                        <div style={{\n                            position: 'relative',\n                            background: '#17324D',\n                            top: -90,\n                            left: -50,\n                        }}>\n                            <div className=\"text-white w-100\">\n                                <div className=\"w-100 h-100 d-flex justify-content-start pt-3 pl-4\">\n                                    <h5>Totale<br></br>vaccini distribuiti</h5>\n                                </div>\n                                <div className=\"w-100  h-100 d-flex justify-content-start pl-4\">\n                                    <p className=\"numeri_box\" >{totalSuplier?.toLocaleString('it')}\n                                    </p>\n                                </div>\n                                <div className=\"col-12 d-flex justify-content-end  pb-2\">\n                                    <img alt=\"\" src=\"\" onClick={resetFilter} height={35} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* <div className=\"col-12 col-md-6 h-100\">\n\n                <div className=\"p-4  d-lg-none\">\n                    <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n                        <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n                        <h5 className=\"pl-3 pl-sm-1\">Distribuzione vaccini<br /> per regione</h5>\n                    </div>\n                </div>\n                <div className=\"p-4  d-none d-lg-block position-text-lg\">\n                    <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n                        <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n                        <h5 className=\"pl-3 pl-sm-1\">Distribuzione<br />vaccini<br /> per regione</h5>\n                    </div>\n                </div>\n                <MapAreaBySupplier\n                    summary={barState ? { deliverySummary: barState } : summary.data}\n                    selected={selectedLocationCategoryMap}\n                    handleCountryClick={handleCountryClickCategories}\n                    maxByCategory={maxByCategory}\n                    className=\"w-100 h-100\"\n                />\n            </div> */}\n            <div className=\"col-12 col-md-6 h-100 pb-5\">\n                <BarChartSupplier\n                    title=\"\"\n                    xtitle=\"Fascia d'età\"\n                    ytitle=\"\"\n                    width=\"800\"\n                    handleDeliveryBarChartClick={handleDeliveryBarChartClick}\n                    height=\"300\"\n                    selected={selectedSupplier}\n                    property={{ xprop: \"fornitore\", yprop: \"totale\" }}\n                    data={deliveryBarChartData}\n                />\n            </div>\n            <div className=\" d-none d-sm-none d-md-block d-lg-none  col-md-6\">\n\n            </div>\n        </div>\n    );\n};","import { React, useEffect } from \"react\";\nimport $ from \"jquery\";\nimport DataTable from \"datatables.net\";\nimport \"datatables.net-bs4/css/dataTables.bootstrap4.min.css\";\n\n$.DataTable = DataTable;\nconst columns = [\n  { title: \"Regione\", data: \"area\" },\n  { title: \"Provincia\", data: \"provincia\" },\n  { title: \"Comune\", data: \"comune\" },\n  { title: \"Punto di somministrazione\", data: \"presidio_ospedaliero\" },\n];\n\nexport const LocationsTable = (props) => {\n\n  useEffect(() => {\n    const {setLocationCount} = props;\n\n    const table = $(\"#datatable-locations\")\n      .find(\"table\")\n      .DataTable({\n        dom:\n          \"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'>>\" +\n          \"<'row'<'col-sm-12'tr>>\" +\n          \"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",       \n        paging: false,\n        searching: true,\n        destroy: true,\n        bLengthChange: false,\n        info: false,\n        scrollY: '550px',\n        scrollCollapse: true,\n        data: props.summary?.locations || [],\n        columns,\n      });\n    if (props?.selected) {\n      table.search(props.selected).draw();\n    } else {\n      table.search(\" \").draw();\n    }\n\n    setLocationCount(table.rows( {search:'applied'} ).count()/2)\n  });\n  return (\n    <div id=\"datatable-locations\">\n      <table\n        className=\"display compact\"\n        cellSpacing=\"0\"\n        width=\"100%\"\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isEmpty, max } from \"lodash\";\nimport { MapArea } from \"./../components/MapArea\";\nimport { LocationsTable } from \"./../components/LocationsTable\";\n\nconst TextBoxTotal = () => (\n  <div className=\"text-white w-100\">\n    <div className=\"w-100  h-100 d-flex justify-content-start pt-5 pl-4\">\n      <h5>Totale punti di somministrazione</h5>\n    </div>\n  </div>\n)\n\nconst TextBoxMap = () => (\n  <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n    <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n    <h5 className=\"pl-3 pl-sm-1\">\n      Principali punti di\n      <br /> somministrazione <br /> della regione\n    </h5>\n  </div>\n)\n\nexport const Locations = ({ data }) => {\n  const [summary, setSummary] = useState({});\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n  const [locationCount, setLocationCount] = useState(0);\n\n  useEffect(() => {\n    if (!isEmpty(data)) {\n      setSummary(data);\n    }\n  }, [data]);\n\n  const resetFilter = () => {\n    setSelectedLocation(\"\");\n    setLocationCount(0);\n  };\n\n  const fillMapDeliveryArea = ({ region, maxValue, field }) => {\n    let scaleOp = 0;\n    if (region.area === selectedLocation) {\n      scaleOp = 1;\n    } else if (!selectedLocation) {\n      scaleOp = max([region[field] / maxValue, 0.1]);\n    } else {\n      const valueToFill = region[field] / (2 * maxValue);\n      scaleOp = max([valueToFill, 0.1]);\n    }\n    return `rgba(23,50,77,${scaleOp})`;\n  };\n\n  const handleClick = (region) => {\n    if (selectedLocation === region.area) {\n      setSelectedLocation(null);\n    } else {\n      setSelectedLocation(region.area);\n    }\n  };\n\n  return (\n    <div className=\"row \">\n      <div className=\"col-12 d-flex justify-content-center align-items-center p-5 bg-title-plot\">\n        <img\n          src=\"logo.png\"\n          width=\"86\"\n          height=\"86\"\n          alt=\"Logo\"\n          className=\"img-fluid\"\n          style={{ zIndex: 10 }}\n        />\n        <h3 className=\"text-center\">Principali punti di somministrazione</h3>\n      </div>\n      <div className=\"col-12 col-md-12 h-100 p-0\">\n        <div\n          className=\"mb-5  d-lg-none \"\n          style={{\n            position: \"relative\",\n            background: \"#013366\",\n          }}\n        >\n          <div className=\"text-white w-100\">\n            <TextBoxTotal/>\n            <div className=\"w-100  h-100 d-flex justify-content-start pl-4\">\n              <p className=\"numeri_box\">{locationCount}</p>\n            </div>\n            <div className=\"col-12 d-flex justify-content-end  pb-2\">\n              <img\n                alt=\"\"\n                src=\"\"\n                onClick={resetFilter}\n                height={35}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3 col-md-3 h-100 d-none d-lg-block\">\n          <div\n            style={{\n              position: \"relative\",\n              // width: 300,\n              // height: 180,\n              background: \"#17324D\",\n              top: -90,\n              left: 40,\n            }}\n          >\n            <div className=\"text-white w-100\">\n              <TextBoxTotal/>\n              <div className=\"w-100  h-100 d-flex justify-content-start pl-4\">\n                <p className=\"numeri_box\">{locationCount}</p>\n              </div>\n              <div className=\"col-12 d-flex justify-content-end  pb-2\">\n                <img\n                  alt=\"\"\n                  src=\"\"\n                  onClick={resetFilter}\n                  height={35}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-12 col-md-6 pt-5\">\n        <div className=\"p-4 position-relative d-lg-none\">\n          <TextBoxMap/>\n        </div>\n        <div\n          className=\"p-4 position-relative d-none d-lg-block\"\n          style={{ left: \"300px\", top: \"190px\" }}\n        >\n          <TextBoxMap/>\n        </div>\n        <MapArea\n          fillMapDeliveryArea={fillMapDeliveryArea}\n          summary={data.locationsByRegion}\n          handleMapDeliveryClick={handleClick}\n          tooltip={(r) =>\n            r.area + \" \" + (r.locations && r.locations.toLocaleString(\"it\"))\n          }\n          fillBy=\"locations\"\n          className=\"ml-5 w-100 h-100\"\n        />\n      </div>\n      <div className=\"col-12 col-md-6 pt-3 pl-3\">\n        <LocationsTable\n          summary={{ ...summary }}\n          selected={selectedLocation}\n          className=\"mr-5 h-100\"\n          setLocationCount={setLocationCount}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { HeaderBar } from \"./components/HeaderBar\";\nimport { FooterBar } from \"./components/FooterBar\";\n\nimport { Total } from \"./components/Total\";\nimport { loadData } from \"./loadData\";\nimport { Deliveries } from \"./containers/deliveries\";\nimport { Categories } from \"./containers/categories\";\nimport { Supplier } from './components/Supplier';\nimport { hideLoader } from \"./utils\";\nimport \"./App.css\";\nimport { Locations } from \"./containers/locations\";\n\n\nfunction App() {\n  const [summary, setSummary] = useState({});\n\n  useEffect(() => {\n    loadData().then((d) => {\n      hideLoader();\n      setSummary(d);\n    });\n  }, []);\n\n\n  return (\n    <div>\n      <HeaderBar />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 d-flex justify-content-center\">\n\n            <Total className=\"mb-3\" summary={{ ...summary }} />\n\n          </div>\n        </div>\n        <div style={{ padding: 20 }}></div>\n\n        <div className=\"row position-powerbi\" style={{ backgroundColor: '#17324D' }} >\n          <div className=\"col-12\">\n            <div className=\"p-4 position-relative d-flex justify-content-center  h-100\" style={{ backgroundColor: '#17324D', minHeight: 240 }}>\n              <div className=\"d-none  d-lg-block\" style={{ height: 100, position: 'absolute', left: '20px', top: '20px' }}>\n                <img src=\"group_person.svg\" alt=\"Logo\" className=\"img-fluid\" />\n              </div>\n              <div className=\"  d-none  d-lg-block position-absolute center-logo\">\n                <img src=\"logo.png\" width=\"80\" height=\"80\" alt=\"Logo\" />\n              </div>\n              <div className=\"text-white w-100\" style={{ padding: 20 }}>\n\n                <div className=\"w-100  h-100 align-items-center d-flex justify-content-center text-right\">\n                  <h4 style={{ marginRight: 10 }}>Totale<br></br> persone vaccinate</h4>\n                  <div className=\"d-flex justify-content-center text-right align-items-center border-pink\"> {summary?.totalDoses?.seconda_dose?.toLocaleString('it')}</div>\n                </div>\n                <div className=\"text-center position-relative\" style={{ top: -10 }}>(a cui sono state somministrate la prima e la seconda dose di vaccino)</div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        <Deliveries\n          data={summary}\n        />\n        <Categories\n          data={summary}\n        />\n        <Supplier data={summary}></Supplier>\n        <Locations\n          data={summary}\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-center pt-5 pb-3\">\n            I dati visualizzati sono disponibili all'indirizzo{\" \"}\n            <a href=\"https://github.com/italia/covid19-opendata-vaccini\">\n              https://github.com/italia/covid19-opendata-vaccini\n        </a>\n          </div>\n        </div>\n      </div>\n      <FooterBar />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}